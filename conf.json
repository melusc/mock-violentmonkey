{
	"env": {
		"es2024": true,
		"es6": true,
		"es2021": true,
		"node": true
	},
	"globals": {},
	"parser": "C:\\Users\\lucas\\GitHub\\mock-violentmonkey\\node_modules\\@typescript-eslint\\parser\\dist\\index.js",
	"parserOptions": {
		"warnOnUnsupportedTypeScriptVersion": false,
		"ecmaFeatures": {
			"jsx": true
		},
		"project": "C:/Users/lucas/GitHub/mock-violentmonkey/tsconfig.json",
		"projectFolderIgnoreList": [{}],
		"sourceType": "module",
		"ecmaVersion": "latest"
	},
	"plugins": [
		"eslint-comments",
		"n",
		"import",
		"promise",
		"unicorn",
		"ava",
		"no-use-extend-native",
		"@typescript-eslint"
	],
	"reportUnusedDisableDirectives": true,
	"rules": {
		"prefer-template": ["error"],
		"new-cap": [
			"error",
			{
				"capIsNewExceptionPattern": "^GM",
				"newIsCap": true,
				"capIsNew": true,
				"properties": true
			}
		],
		"indent": [
			"off",
			"tab",
			{
				"SwitchCase": 1,
				"flatTernaryExpressions": false,
				"offsetTernaryExpressions": false,
				"ignoreComments": false
			}
		],
		"no-mixed-spaces-and-tabs": [
			"off",
			{
				"//": "let prettier handle it, https://prettier.io/docs/en/options.html#tabs"
			}
		],
		"import/order": [
			"error",
			{
				"newlines-between": "always",
				"warnOnUnassignedImports": true,
				"distinctGroup": true
			}
		],
		"@typescript-eslint/indent": [
			"off",
			"tab",
			{
				"SwitchCase": 1,
				"flatTernaryExpressions": false,
				"offsetTernaryExpressions": false,
				"ignoreComments": false
			}
		],
		"@typescript-eslint/quotes": [
			"error",
			"single",
			{
				"avoidEscape": true
			}
		],
		"@typescript-eslint/naming-convention": [
			"off",
			{
				"selector": [
					"variable",
					"function",
					"classProperty",
					"objectLiteralProperty",
					"parameterProperty",
					"classMethod",
					"objectLiteralMethod",
					"typeMethod",
					"accessor"
				],
				"format": ["strictCamelCase"],
				"leadingUnderscore": "allowSingleOrDouble",
				"trailingUnderscore": "allow",
				"filter": {
					"regex": "[- ]",
					"match": false
				}
			},
			{
				"selector": "typeLike",
				"format": ["StrictPascalCase"]
			},
			{
				"selector": "variable",
				"types": ["boolean"],
				"format": ["StrictPascalCase"],
				"prefix": ["is", "has", "can", "should", "will", "did"]
			},
			{
				"selector": "interface",
				"filter": "^(?!I)[A-Z]",
				"format": ["StrictPascalCase"]
			},
			{
				"selector": "typeParameter",
				"filter": "^T$|^[A-Z][a-zA-Z]+$",
				"format": ["StrictPascalCase"]
			},
			{
				"selector": ["classProperty", "objectLiteralProperty"],
				"format": null,
				"modifiers": ["requiresQuotes"]
			}
		],
		"n/file-extension-in-import": [
			"off",
			"always",
			{
				".ts": "never",
				".tsx": "never",
				".mts": "never",
				".cts": "never"
			}
		],
		"n/no-unsupported-features/node-builtins": [
			"error",
			{
				"version": "^18.17.1 || ^20.6.1 || ^22.0.0"
			}
		],
		"n/no-unsupported-features/es-builtins": [
			"error",
			{
				"version": "^18.17.1 || ^20.6.1 || ^22.0.0"
			}
		],
		"n/no-unsupported-features/es-syntax": [
			"error",
			{
				"version": "^18.17.1 || ^20.6.1 || ^22.0.0",
				"ignores": ["modules"]
			}
		],
		"unicorn/import-style": ["off"],
		"node/file-extension-in-import": ["off"],
		"import/export": ["off"],
		"import/default": ["off"],
		"import/named": ["off"],
		"@typescript-eslint/adjacent-overload-signatures": ["error"],
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "array-simple"
			}
		],
		"@typescript-eslint/await-thenable": ["error"],
		"@typescript-eslint/ban-ts-comment": [
			"error",
			{
				"ts-expect-error": "allow-with-description",
				"minimumDescriptionLength": 4
			}
		],
		"@typescript-eslint/ban-tslint-comment": ["error"],
		"@typescript-eslint/ban-types": [
			"error",
			{
				"extendDefaults": false,
				"types": {
					"String": {
						"message": "Use `string` instead.",
						"fixWith": "string"
					},
					"Number": {
						"message": "Use `number` instead.",
						"fixWith": "number"
					},
					"Boolean": {
						"message": "Use `boolean` instead.",
						"fixWith": "boolean"
					},
					"Symbol": {
						"message": "Use `symbol` instead.",
						"fixWith": "symbol"
					},
					"BigInt": {
						"message": "Use `bigint` instead.",
						"fixWith": "bigint"
					},
					"Object": {
						"message": "The `Object` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead. See https://github.com/typescript-eslint/typescript-eslint/pull/848",
						"fixWith": "Record<string, unknown>"
					},
					"{}": {
						"message": "The `{}` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead.",
						"fixWith": "Record<string, unknown>"
					},
					"object": {
						"message": "The `object` type is hard to use. Use `Record<string, unknown>` instead. See: https://github.com/typescript-eslint/typescript-eslint/pull/848",
						"fixWith": "Record<string, unknown>"
					},
					"Function": "Use a specific function type instead, like `() => void`.",
					"null": {
						"message": "Use `undefined` instead. See: https://github.com/sindresorhus/meta/issues/7",
						"fixWith": "undefined"
					},
					"Buffer": {
						"message": "Use Uint8Array instead. See: https://sindresorhus.com/blog/goodbye-nodejs-buffer",
						"suggest": ["Uint8Array"]
					},
					"[]": "Don't use the empty array type `[]`. It only allows empty arrays. Use `SomeType[]` instead.",
					"[[]]": "Don't use `[[]]`. It only allows an array with a single element which is an empty array. Use `SomeType[][]` instead.",
					"[[[]]]": "Don't use `[[[]]]`. Use `SomeType[][][]` instead.",
					"[[[[]]]]": "ur drunk ­ƒñí",
					"[[[[[]]]]]": "­ƒªä­ƒÆÑ"
				}
			}
		],
		"@typescript-eslint/class-literal-property-style": ["error", "getters"],
		"@typescript-eslint/consistent-generic-constructors": [
			"error",
			"constructor"
		],
		"@typescript-eslint/consistent-indexed-object-style": ["error"],
		"brace-style": [
			"off",
			"1tbs",
			{
				"allowSingleLine": false
			}
		],
		"@typescript-eslint/brace-style": [
			"error",
			"1tbs",
			{
				"allowSingleLine": false
			}
		],
		"comma-dangle": ["off", "always-multiline"],
		"@typescript-eslint/comma-dangle": ["error", "always-multiline"],
		"comma-spacing": [
			"off",
			{
				"before": false,
				"after": true
			}
		],
		"@typescript-eslint/comma-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"default-param-last": ["off"],
		"@typescript-eslint/default-param-last": ["error"],
		"dot-notation": ["off"],
		"@typescript-eslint/dot-notation": ["error"],
		"@typescript-eslint/consistent-type-assertions": [
			"error",
			{
				"assertionStyle": "as",
				"objectLiteralTypeAssertions": "allow-as-parameter"
			}
		],
		"@typescript-eslint/consistent-type-definitions": ["error", "type"],
		"@typescript-eslint/consistent-type-exports": [
			"error",
			{
				"fixMixedExportsWithInlineTypeSpecifier": true
			}
		],
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"fixStyle": "inline-type-imports"
			}
		],
		"func-call-spacing": ["off", "never"],
		"@typescript-eslint/func-call-spacing": ["error", "never"],
		"keyword-spacing": ["off"],
		"@typescript-eslint/keyword-spacing": ["error"],
		"lines-between-class-members": [
			"off",
			{
				"enforce": [
					{
						"blankLine": "always",
						"prev": "*",
						"next": "method"
					},
					{
						"blankLine": "always",
						"prev": "method",
						"next": "field"
					},
					{
						"blankLine": "never",
						"prev": "field",
						"next": "field"
					}
				]
			}
		],
		"@typescript-eslint/lines-between-class-members": [
			"error",
			"always",
			{
				"exceptAfterSingleLine": true,
				"exceptAfterOverload": true
			}
		],
		"@typescript-eslint/member-delimiter-style": [
			"error",
			{
				"multiline": {
					"delimiter": "semi",
					"requireLast": true
				},
				"singleline": {
					"delimiter": "semi",
					"requireLast": false
				}
			}
		],
		"@typescript-eslint/member-ordering": [
			"error",
			{
				"default": [
					"signature",
					"public-static-field",
					"public-static-method",
					"protected-static-field",
					"protected-static-method",
					"private-static-field",
					"private-static-method",
					"static-field",
					"static-method",
					"public-decorated-field",
					"public-instance-field",
					"public-abstract-field",
					"public-field",
					"protected-decorated-field",
					"protected-instance-field",
					"protected-abstract-field",
					"protected-field",
					"private-decorated-field",
					"private-instance-field",
					"private-field",
					"instance-field",
					"abstract-field",
					"decorated-field",
					"field",
					"public-constructor",
					"protected-constructor",
					"private-constructor",
					"constructor",
					"public-decorated-method",
					"public-instance-method",
					"public-abstract-method",
					"public-method",
					"protected-decorated-method",
					"protected-instance-method",
					"protected-abstract-method",
					"protected-method",
					"private-decorated-method",
					"private-instance-method",
					"private-method",
					"instance-method",
					"abstract-method",
					"decorated-method",
					"method"
				]
			}
		],
		"camelcase": [
			"off",
			{
				"properties": "always",
				"ignoreDestructuring": false,
				"ignoreImports": false,
				"ignoreGlobals": false
			}
		],
		"@typescript-eslint/no-base-to-string": ["error"],
		"no-array-constructor": ["off"],
		"@typescript-eslint/no-array-constructor": ["error"],
		"@typescript-eslint/no-array-delete": ["error"],
		"no-dupe-class-members": ["off"],
		"@typescript-eslint/no-dupe-class-members": ["error"],
		"@typescript-eslint/no-confusing-void-expression": ["error"],
		"@typescript-eslint/no-duplicate-enum-values": ["error"],
		"@typescript-eslint/no-duplicate-type-constituents": ["error"],
		"@typescript-eslint/no-dynamic-delete": ["error"],
		"no-empty-function": ["off"],
		"@typescript-eslint/no-empty-function": ["error"],
		"@typescript-eslint/no-empty-interface": [
			"error",
			{
				"allowSingleExtends": true
			}
		],
		"@typescript-eslint/no-extra-non-null-assertion": ["error"],
		"no-extra-parens": ["off"],
		"no-extra-semi": ["off"],
		"@typescript-eslint/no-extra-semi": ["error"],
		"no-loop-func": ["off"],
		"@typescript-eslint/no-loop-func": ["error"],
		"no-loss-of-precision": ["off"],
		"@typescript-eslint/no-loss-of-precision": ["error"],
		"@typescript-eslint/no-extraneous-class": [
			"error",
			{
				"allowConstructorOnly": false,
				"allowEmpty": false,
				"allowStaticOnly": false,
				"allowWithDecorator": true
			}
		],
		"no-void": [
			"error",
			{
				"allowAsStatement": true
			}
		],
		"@typescript-eslint/no-floating-promises": [
			"error",
			{
				"checkThenables": true,
				"ignoreVoid": true,
				"ignoreIIFE": true
			}
		],
		"@typescript-eslint/no-for-in-array": ["error"],
		"@typescript-eslint/no-inferrable-types": ["error"],
		"@typescript-eslint/no-meaningless-void-operator": ["error"],
		"@typescript-eslint/no-misused-new": ["error"],
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksConditionals": true,
				"checksVoidReturn": false
			}
		],
		"@typescript-eslint/no-namespace": ["error"],
		"@typescript-eslint/no-non-null-asserted-nullish-coalescing": ["error"],
		"@typescript-eslint/no-non-null-asserted-optional-chain": ["error"],
		"no-redeclare": ["off"],
		"@typescript-eslint/no-redeclare": ["error"],
		"no-restricted-imports": [
			"off",
			"domain",
			"freelist",
			"smalloc",
			"punycode",
			"sys",
			"querystring",
			"colors"
		],
		"@typescript-eslint/no-restricted-imports": [
			"error",
			{
				"paths": [
					"error",
					"domain",
					"freelist",
					"smalloc",
					"punycode",
					"sys",
					"querystring",
					"colors"
				]
			}
		],
		"@typescript-eslint/no-require-imports": ["error"],
		"@typescript-eslint/no-this-alias": [
			"error",
			{
				"allowDestructuring": true
			}
		],
		"no-throw-literal": ["off"],
		"@typescript-eslint/only-throw-error": [
			"error",
			{
				"allowThrowingUnknown": true,
				"allowThrowingAny": false
			}
		],
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": ["error"],
		"no-constant-condition": ["error"],
		"@typescript-eslint/no-unnecessary-parameter-property-assignment": [
			"error"
		],
		"@typescript-eslint/no-unnecessary-qualifier": ["error"],
		"@typescript-eslint/no-unnecessary-type-arguments": ["error"],
		"@typescript-eslint/no-unnecessary-type-assertion": ["error"],
		"@typescript-eslint/no-unnecessary-type-constraint": ["error"],
		"@typescript-eslint/no-unsafe-argument": ["error"],
		"@typescript-eslint/no-unsafe-assignment": ["error"],
		"@typescript-eslint/no-unsafe-call": ["error"],
		"@typescript-eslint/no-unsafe-declaration-merging": ["error"],
		"@typescript-eslint/no-unsafe-enum-comparison": ["error"],
		"@typescript-eslint/no-unsafe-return": ["error"],
		"@typescript-eslint/no-useless-empty-export": ["error"],
		"no-unused-expressions": [
			"off",
			{
				"enforceForJSX": true,
				"allowShortCircuit": false,
				"allowTernary": false,
				"allowTaggedTemplates": false
			}
		],
		"@typescript-eslint/no-unused-expressions": ["error"],
		"no-unused-vars": [
			"off",
			{
				"vars": "all",
				"varsIgnorePattern": "^_",
				"args": "after-used",
				"ignoreRestSiblings": true,
				"argsIgnorePattern": "^_",
				"caughtErrors": "all",
				"caughtErrorsIgnorePattern": "^_$"
			}
		],
		"no-useless-constructor": ["off"],
		"@typescript-eslint/no-useless-constructor": ["error"],
		"object-curly-spacing": ["off", "never"],
		"@typescript-eslint/object-curly-spacing": ["error", "never"],
		"padding-line-between-statements": [
			"off",
			{
				"blankLine": "always",
				"prev": "multiline-block-like",
				"next": "*"
			}
		],
		"@typescript-eslint/padding-line-between-statements": [
			"error",
			{
				"blankLine": "always",
				"prev": "multiline-block-like",
				"next": "*"
			}
		],
		"@typescript-eslint/no-var-requires": ["error"],
		"@typescript-eslint/non-nullable-type-assertion-style": ["error"],
		"@typescript-eslint/parameter-properties": [
			"error",
			{
				"prefer": "parameter-property"
			}
		],
		"@typescript-eslint/prefer-as-const": ["error"],
		"@typescript-eslint/prefer-find": ["error"],
		"@typescript-eslint/prefer-for-of": ["error"],
		"@typescript-eslint/prefer-function-type": ["error"],
		"@typescript-eslint/prefer-includes": ["error"],
		"@typescript-eslint/prefer-literal-enum-member": ["error"],
		"@typescript-eslint/prefer-namespace-keyword": ["error"],
		"@typescript-eslint/prefer-nullish-coalescing": [
			"error",
			{
				"ignoreTernaryTests": false,
				"ignoreConditionalTests": false,
				"ignoreMixedLogicalExpressions": false
			}
		],
		"@typescript-eslint/prefer-optional-chain": ["error"],
		"prefer-promise-reject-errors": [
			"off",
			{
				"allowEmptyReject": true
			}
		],
		"@typescript-eslint/prefer-promise-reject-errors": ["error"],
		"@typescript-eslint/prefer-readonly": ["error"],
		"@typescript-eslint/prefer-reduce-type-parameter": ["error"],
		"@typescript-eslint/prefer-string-starts-ends-with": ["error"],
		"@typescript-eslint/promise-function-async": ["error"],
		"quotes": ["off", "single"],
		"@typescript-eslint/restrict-plus-operands": [
			"error",
			{
				"allowAny": false
			}
		],
		"@typescript-eslint/restrict-template-expressions": [
			"error",
			{
				"allowNumber": true
			}
		],
		"@typescript-eslint/return-await": ["error"],
		"@typescript-eslint/require-array-sort-compare": [
			"error",
			{
				"ignoreStringArrays": true
			}
		],
		"space-before-function-paren": [
			"off",
			{
				"anonymous": "always",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"@typescript-eslint/space-before-function-paren": [
			"error",
			{
				"anonymous": "always",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"space-infix-ops": ["off"],
		"@typescript-eslint/space-infix-ops": ["error"],
		"semi": ["off", "always"],
		"@typescript-eslint/semi": ["error", "always"],
		"space-before-blocks": ["off", "always"],
		"@typescript-eslint/space-before-blocks": ["error", "always"],
		"default-case": ["off"],
		"@typescript-eslint/switch-exhaustiveness-check": [
			"error",
			{
				"allowDefaultCaseForExhaustiveSwitch": false,
				"requireDefaultForNonUnion": true
			}
		],
		"@typescript-eslint/triple-slash-reference": [
			"error",
			{
				"path": "never",
				"types": "never",
				"lib": "never"
			}
		],
		"@typescript-eslint/type-annotation-spacing": ["error"],
		"@typescript-eslint/prefer-regexp-exec": ["error"],
		"@typescript-eslint/prefer-return-this-type": ["error"],
		"@typescript-eslint/unified-signatures": [
			"error",
			{
				"ignoreDifferentlyNamedParameters": true
			}
		],
		"@typescript-eslint/use-unknown-in-catch-callback-variable": ["error"],
		"no-undef": [
			"off",
			{
				"typeof": true
			}
		],
		"node/no-unsupported-features/es-syntax": ["off"],
		"node/no-unsupported-features/es-builtins": ["off"],
		"import/namespace": [
			"off",
			{
				"allowComputed": true
			}
		],
		"no-duplicate-imports": ["off"],
		"no-use-extend-native/no-use-extend-native": ["error"],
		"unicorn/prevent-abbreviations": [
			"error",
			{
				"checkFilenames": false,
				"checkDefaultAndNamespaceImports": false,
				"checkShorthandImports": false,
				"extendDefaultReplacements": true,
				"replacements": {
					"whitelist": {
						"include": true
					},
					"blacklist": {
						"exclude": true
					},
					"master": {
						"main": true
					},
					"slave": {
						"secondary": true
					},
					"application": {
						"app": true
					},
					"applications": {
						"apps": true
					},
					"env": false,
					"i": false,
					"bin": {
						"binary": true
					},
					"eof": {
						"endOfFile": true
					},
					"impl": {
						"implement": true,
						"implementation": true
					},
					"anim": {
						"animation": true
					},
					"calc": {
						"calculate": true
					},
					"dict": {
						"dictionary": true
					},
					"dup": {
						"duplicate": true
					},
					"enc": {
						"encode": true,
						"encryption": true
					},
					"gen": {
						"generate": true,
						"general": true
					},
					"gfx": {
						"graphics": true
					},
					"inc": {
						"increment": true
					},
					"iter": {
						"iterate": true,
						"iterator": true
					},
					"nav": {
						"navigate": true,
						"navigation": true
					},
					"norm": {
						"normalize": true
					},
					"notif": {
						"notification": true
					},
					"perf": {
						"performance": true
					},
					"proc": {
						"process": true
					},
					"rand": {
						"random": true
					},
					"sys": {
						"system": true
					},
					"temp": {
						"temporary": true
					}
				}
			}
		],
		"unicorn/better-regex": [
			"error",
			{
				"sortCharacterClasses": false
			}
		],
		"unicorn/no-empty-file": ["off"],
		"unicorn/no-null": ["off"],
		"unicorn/prefer-ternary": ["error", "only-single-line"],
		"unicorn/prefer-json-parse-buffer": ["off"],
		"unicorn/consistent-function-scoping": ["off"],
		"unicorn/no-useless-undefined": ["off"],
		"unicorn/prefer-string-raw": ["off"],
		"function-call-argument-newline": ["off", "consistent"],
		"promise/param-names": ["error"],
		"promise/no-return-wrap": [
			"error",
			{
				"allowReject": true
			}
		],
		"promise/no-new-statics": ["error"],
		"promise/no-return-in-finally": ["error"],
		"promise/valid-params": ["error"],
		"promise/prefer-await-to-then": ["error"],
		"import/extensions": [
			"error",
			"always",
			{
				"ignorePackages": true
			}
		],
		"import/first": ["error"],
		"import/no-absolute-path": ["error"],
		"import/no-anonymous-default-export": ["error"],
		"import/no-named-default": ["error"],
		"import/no-webpack-loader-syntax": ["error"],
		"import/no-self-import": ["error"],
		"import/no-cycle": [
			"error",
			{
				"ignoreExternal": true,
				"allowUnsafeDynamicCyclicDependency": false
			}
		],
		"import/no-useless-path-segments": ["error"],
		"import/newline-after-import": ["error", {}],
		"import/no-amd": ["error"],
		"import/no-duplicates": [
			"error",
			{
				"prefer-inline": true
			}
		],
		"import/no-empty-named-blocks": ["error"],
		"import/no-extraneous-dependencies": [
			"error",
			{
				"includeTypes": true
			}
		],
		"import/no-mutable-exports": ["error"],
		"import/no-named-as-default-member": ["error"],
		"import/no-named-as-default": ["error"],
		"import/no-unassigned-import": [
			"error",
			{
				"allow": [
					"@babel/polyfill",
					"**/register",
					"**/register.*",
					"**/register/**",
					"**/register/**.*",
					"**/*.css",
					"**/*.scss",
					"**/*.sass",
					"**/*.less"
				]
			}
		],
		"n/no-unpublished-bin": ["error"],
		"n/no-mixed-requires": [
			"error",
			{
				"grouping": true,
				"allowCall": true
			}
		],
		"n/no-new-require": ["error"],
		"n/no-path-concat": ["error"],
		"n/process-exit-as-throw": ["error"],
		"n/no-deprecated-api": ["error"],
		"n/prefer-global/console": ["error", "always"],
		"n/prefer-global/process": ["error", "never"],
		"n/prefer-global/text-decoder": ["error", "always"],
		"n/prefer-global/text-encoder": ["error", "always"],
		"n/prefer-global/url-search-params": ["error", "always"],
		"n/prefer-global/url": ["error", "always"],
		"n/prefer-promises/dns": ["error"],
		"n/prefer-promises/fs": ["error"],
		"eslint-comments/disable-enable-pair": [
			"error",
			{
				"allowWholeFile": true
			}
		],
		"eslint-comments/no-aggregating-enable": ["error"],
		"eslint-comments/no-duplicate-disable": ["error"],
		"eslint-comments/no-unused-disable": ["error"],
		"eslint-comments/no-unused-enable": ["error"],
		"no-negated-condition": ["off"],
		"no-nested-ternary": ["off"],
		"unicorn/catch-error-name": ["error"],
		"unicorn/consistent-destructuring": ["off"],
		"unicorn/consistent-empty-array-spread": ["error"],
		"unicorn/custom-error-definition": ["off"],
		"unicorn/empty-brace-spaces": ["error"],
		"unicorn/error-message": ["error"],
		"unicorn/escape-case": ["error"],
		"unicorn/expiring-todo-comments": ["error"],
		"unicorn/explicit-length-check": ["error"],
		"unicorn/filename-case": ["error"],
		"unicorn/new-for-builtins": ["error"],
		"unicorn/no-abusive-eslint-disable": ["error"],
		"unicorn/no-anonymous-default-export": ["error"],
		"unicorn/no-array-callback-reference": ["error"],
		"unicorn/no-array-for-each": ["error"],
		"unicorn/no-array-method-this-argument": ["error"],
		"unicorn/no-array-push-push": ["error"],
		"unicorn/no-array-reduce": ["error"],
		"unicorn/no-await-expression-member": ["error"],
		"unicorn/no-await-in-promise-methods": ["error"],
		"unicorn/no-console-spaces": ["error"],
		"unicorn/no-document-cookie": ["error"],
		"unicorn/no-for-loop": ["error"],
		"unicorn/no-hex-escape": ["error"],
		"unicorn/no-instanceof-array": ["error"],
		"unicorn/no-invalid-fetch-options": ["error"],
		"unicorn/no-invalid-remove-event-listener": ["error"],
		"unicorn/no-keyword-prefix": ["off"],
		"unicorn/no-lonely-if": ["error"],
		"unicorn/no-magic-array-flat-depth": ["error"],
		"unicorn/no-negated-condition": ["error"],
		"unicorn/no-negation-in-equality-check": ["error"],
		"unicorn/no-nested-ternary": ["error"],
		"unicorn/no-new-array": ["error"],
		"unicorn/no-new-buffer": ["error"],
		"unicorn/no-object-as-default-parameter": ["error"],
		"unicorn/no-process-exit": ["error"],
		"unicorn/no-single-promise-in-promise-methods": ["error"],
		"unicorn/no-static-only-class": ["error"],
		"unicorn/no-thenable": ["error"],
		"unicorn/no-this-assignment": ["error"],
		"unicorn/no-typeof-undefined": ["error"],
		"unicorn/no-unnecessary-await": ["error"],
		"unicorn/no-unnecessary-polyfills": ["error"],
		"unicorn/no-unreadable-array-destructuring": ["error"],
		"unicorn/no-unreadable-iife": ["error"],
		"unicorn/no-unused-properties": ["off"],
		"unicorn/no-useless-fallback-in-spread": ["error"],
		"unicorn/no-useless-length-check": ["error"],
		"unicorn/no-useless-promise-resolve-reject": ["error"],
		"unicorn/no-useless-spread": ["error"],
		"unicorn/no-useless-switch-case": ["error"],
		"unicorn/no-zero-fractions": ["error"],
		"unicorn/number-literal-case": ["error"],
		"unicorn/numeric-separators-style": ["error"],
		"unicorn/prefer-add-event-listener": ["error"],
		"unicorn/prefer-array-find": ["error"],
		"unicorn/prefer-array-flat-map": ["error"],
		"unicorn/prefer-array-flat": ["error"],
		"unicorn/prefer-array-index-of": ["error"],
		"unicorn/prefer-array-some": ["error"],
		"unicorn/prefer-at": ["error"],
		"unicorn/prefer-blob-reading-methods": ["error"],
		"unicorn/prefer-code-point": ["error"],
		"unicorn/prefer-date-now": ["error"],
		"unicorn/prefer-default-parameters": ["error"],
		"unicorn/prefer-dom-node-append": ["error"],
		"unicorn/prefer-dom-node-dataset": ["error"],
		"unicorn/prefer-dom-node-remove": ["error"],
		"unicorn/prefer-dom-node-text-content": ["error"],
		"unicorn/prefer-event-target": ["error"],
		"unicorn/prefer-export-from": ["error"],
		"unicorn/prefer-includes": ["error"],
		"unicorn/prefer-keyboard-event-key": ["error"],
		"unicorn/prefer-logical-operator-over-ternary": ["error"],
		"unicorn/prefer-math-trunc": ["error"],
		"unicorn/prefer-modern-dom-apis": ["error"],
		"unicorn/prefer-modern-math-apis": ["error"],
		"unicorn/prefer-module": ["error"],
		"unicorn/prefer-native-coercion-functions": ["error"],
		"unicorn/prefer-negative-index": ["error"],
		"unicorn/prefer-node-protocol": ["error"],
		"unicorn/prefer-number-properties": ["error"],
		"unicorn/prefer-object-from-entries": ["error"],
		"unicorn/prefer-optional-catch-binding": ["error"],
		"unicorn/prefer-prototype-methods": ["error"],
		"unicorn/prefer-query-selector": ["error"],
		"unicorn/prefer-reflect-apply": ["error"],
		"unicorn/prefer-regexp-test": ["error"],
		"unicorn/prefer-set-has": ["error"],
		"unicorn/prefer-set-size": ["error"],
		"unicorn/prefer-spread": ["error"],
		"unicorn/prefer-string-replace-all": ["error"],
		"unicorn/prefer-string-slice": ["error"],
		"unicorn/prefer-string-starts-ends-with": ["error"],
		"unicorn/prefer-string-trim-start-end": ["error"],
		"unicorn/prefer-structured-clone": ["error"],
		"unicorn/prefer-switch": ["error"],
		"unicorn/prefer-top-level-await": ["error"],
		"unicorn/prefer-type-error": ["error"],
		"unicorn/relative-url-style": ["error"],
		"unicorn/require-array-join-separator": ["error"],
		"unicorn/require-number-to-fixed-digits-argument": ["error"],
		"unicorn/require-post-message-target-origin": ["off"],
		"unicorn/string-content": ["off"],
		"unicorn/switch-case-braces": ["error"],
		"unicorn/template-indent": ["error"],
		"unicorn/text-encoding-identifier-case": ["error"],
		"unicorn/throw-new-error": ["error"],
		"ava/assertion-arguments": ["error"],
		"ava/hooks-order": ["error"],
		"ava/max-asserts": ["off", 5],
		"ava/no-async-fn-without-await": ["error"],
		"ava/no-duplicate-modifiers": ["error"],
		"ava/no-identical-title": ["error"],
		"ava/no-ignored-test-files": ["error"],
		"ava/no-import-test-files": ["error"],
		"ava/no-incorrect-deep-equal": ["error"],
		"ava/no-inline-assertions": ["error"],
		"ava/no-nested-tests": ["error"],
		"ava/no-only-test": ["error"],
		"ava/no-skip-assert": ["error"],
		"ava/no-skip-test": ["error"],
		"ava/no-todo-implementation": ["error"],
		"ava/no-todo-test": ["warn"],
		"ava/no-unknown-modifiers": ["error"],
		"ava/prefer-async-await": ["error"],
		"ava/prefer-power-assert": ["off"],
		"ava/prefer-t-regex": ["error"],
		"ava/test-title": ["error"],
		"ava/test-title-format": ["off"],
		"ava/use-t-well": ["error"],
		"ava/use-t": ["error"],
		"ava/use-t-throws-async-well": ["error"],
		"ava/use-test": ["error"],
		"ava/use-true-false": ["error"],
		"for-direction": ["error"],
		"getter-return": ["error"],
		"no-async-promise-executor": ["error"],
		"no-await-in-loop": ["error"],
		"no-compare-neg-zero": ["error"],
		"no-cond-assign": ["error"],
		"no-control-regex": ["error"],
		"no-debugger": ["error"],
		"no-dupe-args": ["error"],
		"no-dupe-else-if": ["error"],
		"no-dupe-keys": ["error"],
		"no-duplicate-case": ["error"],
		"no-empty-character-class": ["error"],
		"no-empty": [
			"error",
			{
				"allowEmptyCatch": true
			}
		],
		"no-empty-static-block": ["error"],
		"no-ex-assign": ["error"],
		"no-extra-boolean-cast": ["error"],
		"no-func-assign": ["error"],
		"no-import-assign": ["error"],
		"no-inner-declarations": ["error"],
		"no-invalid-regexp": ["error"],
		"no-irregular-whitespace": ["error"],
		"no-misleading-character-class": ["error"],
		"no-obj-calls": ["error"],
		"no-promise-executor-return": ["error"],
		"no-prototype-builtins": ["error"],
		"no-regex-spaces": ["error"],
		"no-setter-return": ["error"],
		"no-sparse-arrays": ["error"],
		"no-template-curly-in-string": ["error"],
		"no-unreachable": ["error"],
		"no-unreachable-loop": ["error"],
		"no-unsafe-finally": ["error"],
		"no-unsafe-negation": [
			"error",
			{
				"enforceForOrderingRelations": true
			}
		],
		"no-unsafe-optional-chaining": [
			"error",
			{
				"disallowArithmeticOperators": true
			}
		],
		"no-useless-backreference": ["error"],
		"use-isnan": ["error"],
		"valid-typeof": [
			"error",
			{
				"requireStringLiterals": false
			}
		],
		"no-unexpected-multiline": ["error"],
		"accessor-pairs": [
			"error",
			{
				"enforceForClassMembers": true,
				"getWithoutSet": false,
				"setWithoutGet": true
			}
		],
		"array-callback-return": [
			"error",
			{
				"allowImplicit": true,
				"checkForEach": false,
				"allowVoid": false
			}
		],
		"block-scoped-var": ["error"],
		"complexity": ["warn"],
		"curly": ["error"],
		"default-case-last": ["error"],
		"dot-location": ["error", "property"],
		"eqeqeq": ["error"],
		"grouped-accessor-pairs": ["error", "getBeforeSet"],
		"guard-for-in": ["error"],
		"no-alert": ["error"],
		"no-caller": ["error"],
		"no-case-declarations": ["error"],
		"no-constructor-return": ["error"],
		"no-else-return": [
			"error",
			{
				"allowElseIf": false
			}
		],
		"no-empty-pattern": ["error"],
		"no-eq-null": ["error"],
		"no-eval": ["error"],
		"no-extend-native": ["error"],
		"no-extra-bind": ["error"],
		"no-extra-label": ["error"],
		"no-fallthrough": ["error"],
		"no-floating-decimal": ["error"],
		"no-global-assign": ["error"],
		"no-implicit-coercion": ["error"],
		"no-implicit-globals": ["error"],
		"no-implied-eval": ["error"],
		"no-iterator": ["error"],
		"no-labels": ["error"],
		"no-lone-blocks": ["error"],
		"no-multi-spaces": ["error"],
		"no-multi-str": ["error"],
		"no-new-func": ["error"],
		"no-new-wrappers": ["error"],
		"no-nonoctal-decimal-escape": ["error"],
		"no-object-constructor": ["error"],
		"no-new": ["error"],
		"no-octal-escape": ["error"],
		"no-octal": ["error"],
		"no-proto": ["error"],
		"no-return-assign": ["error", "always"],
		"no-return-await": ["error"],
		"no-script-url": ["error"],
		"no-self-assign": [
			"error",
			{
				"props": true
			}
		],
		"no-self-compare": ["error"],
		"no-sequences": ["error"],
		"no-unmodified-loop-condition": ["error"],
		"no-unused-labels": ["error"],
		"no-useless-call": ["error"],
		"no-useless-catch": ["error"],
		"no-useless-concat": ["error"],
		"no-useless-escape": ["error"],
		"no-useless-return": ["error"],
		"no-warning-comments": ["warn"],
		"no-with": ["error"],
		"prefer-regex-literals": [
			"error",
			{
				"disallowRedundantWrapping": true
			}
		],
		"radix": ["error"],
		"wrap-iife": [
			"error",
			"inside",
			{
				"functionPrototypeMethods": true
			}
		],
		"yoda": ["error"],
		"no-delete-var": ["error"],
		"no-label-var": ["error"],
		"no-restricted-globals": [
			"error",
			"event",
			{
				"name": "atob",
				"message": "This API is deprecated. Use https://github.com/sindresorhus/uint8array-extras instead."
			},
			{
				"name": "btoa",
				"message": "This API is deprecated. Use https://github.com/sindresorhus/uint8array-extras instead."
			}
		],
		"no-shadow-restricted-names": ["error"],
		"no-undef-init": ["error"],
		"no-buffer-constructor": ["error"],
		"array-bracket-newline": ["error", "consistent"],
		"array-bracket-spacing": ["error", "never"],
		"array-element-newline": ["error", "consistent"],
		"capitalized-comments": [
			"error",
			"always",
			{
				"ignorePattern": "pragma|ignore|prettier-ignore|webpack\\w+:|c8|type-coverage:",
				"ignoreInlineComments": true,
				"ignoreConsecutiveComments": true
			}
		],
		"comma-style": ["error", "last"],
		"computed-property-spacing": [
			"error",
			"never",
			{
				"enforceForClassMembers": true
			}
		],
		"eol-last": ["error"],
		"func-name-matching": [
			"error",
			{
				"considerPropertyDescriptor": true
			}
		],
		"func-names": ["error", "never"],
		"jsx-quotes": ["error", "prefer-single"],
		"key-spacing": [
			"error",
			{
				"beforeColon": false,
				"afterColon": true
			}
		],
		"linebreak-style": ["off", "unix"],
		"logical-assignment-operators": [
			"error",
			"always",
			{
				"enforceForIfStatements": true
			}
		],
		"max-depth": ["warn"],
		"max-nested-callbacks": ["warn", 4],
		"max-params": [
			"warn",
			{
				"max": 4
			}
		],
		"max-statements-per-line": ["error"],
		"new-parens": ["error"],
		"no-bitwise": ["error"],
		"no-lonely-if": ["error"],
		"no-mixed-operators": ["error"],
		"no-multi-assign": ["error"],
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1
			}
		],
		"no-whitespace-before-property": ["error"],
		"no-trailing-spaces": ["error"],
		"no-unneeded-ternary": ["error"],
		"object-curly-newline": [
			"error",
			{
				"ObjectExpression": {
					"multiline": true,
					"minProperties": 4,
					"consistent": true
				},
				"ObjectPattern": {
					"multiline": true,
					"consistent": true
				},
				"ImportDeclaration": {
					"multiline": true,
					"minProperties": 4,
					"consistent": true
				},
				"ExportDeclaration": {
					"multiline": true,
					"minProperties": 4,
					"consistent": true
				}
			}
		],
		"one-var": ["error", "never"],
		"one-var-declaration-per-line": ["error"],
		"operator-assignment": ["error", "always"],
		"operator-linebreak": ["error", "before"],
		"padded-blocks": [
			"error",
			"never",
			{
				"allowSingleLineBlocks": false
			}
		],
		"prefer-exponentiation-operator": ["error"],
		"prefer-object-spread": ["error"],
		"quote-props": ["error", "as-needed"],
		"semi-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"semi-style": ["error", "last"],
		"space-in-parens": ["error", "never"],
		"space-unary-ops": ["error"],
		"spaced-comment": [
			"error",
			"always",
			{
				"line": {
					"exceptions": ["-", "+", "*"],
					"markers": ["!", "/", "=>"]
				},
				"block": {
					"exceptions": ["-", "+", "*"],
					"markers": ["!", "*"],
					"balanced": true
				}
			}
		],
		"switch-colon-spacing": [
			"error",
			{
				"after": true,
				"before": false
			}
		],
		"template-tag-spacing": ["error", "never"],
		"unicode-bom": ["error", "never"],
		"arrow-body-style": ["error"],
		"arrow-parens": ["error", "as-needed"],
		"arrow-spacing": [
			"error",
			{
				"before": true,
				"after": true
			}
		],
		"constructor-super": ["error"],
		"generator-star-spacing": ["error", "both"],
		"no-class-assign": ["error"],
		"no-const-assign": ["error"],
		"no-constant-binary-expression": ["error"],
		"no-new-native-nonconstructor": ["error"],
		"no-this-before-super": ["error"],
		"no-useless-computed-key": [
			"error",
			{
				"enforceForClassMembers": true
			}
		],
		"no-useless-rename": ["error"],
		"no-var": ["error"],
		"object-shorthand": [
			"error",
			"always",
			{
				"avoidExplicitReturnArrows": true
			}
		],
		"prefer-arrow-callback": [
			"error",
			{
				"allowNamedFunctions": true,
				"allowUnboundThis": true
			}
		],
		"prefer-const": [
			"error",
			{
				"destructuring": "all",
				"ignoreReadBeforeAssign": false
			}
		],
		"prefer-destructuring": [
			"error",
			{
				"VariableDeclarator": {
					"array": false,
					"object": true
				},
				"AssignmentExpression": {
					"array": false,
					"object": false
				}
			},
			{
				"enforceForRenamedProperties": false
			}
		],
		"prefer-numeric-literals": ["error"],
		"prefer-object-has-own": ["error"],
		"prefer-rest-params": ["error"],
		"prefer-spread": ["error"],
		"require-yield": ["error"],
		"rest-spread-spacing": ["error", "never"],
		"symbol-description": ["error"],
		"template-curly-spacing": ["error"],
		"yield-star-spacing": ["error", "both"]
	},
	"settings": {
		"import/resolver": {
			"node": {
				"extensions": [".js", ".jsx", ".ts", ".tsx"]
			}
		},
		"import/parsers": {
			"C:\\Users\\lucas\\GitHub\\mock-violentmonkey\\node_modules\\@typescript-eslint\\parser\\dist\\index.js": [
				".ts",
				".tsx"
			]
		},
		"import/core-modules": ["electron", "atom"]
	},
	"ignorePatterns": [
		"**/node_modules/**",
		"**/bower_components/**",
		"flow-typed/**",
		"coverage/**",
		"{tmp,temp}/**",
		"**/*.min.js",
		"vendor/**",
		"dist/**",
		"distribution/**",
		"tap-snapshots/*.{cjs,js}"
	]
}
